{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","helpers/getUserById.ts","helpers/getNewTodoId.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","setTitle","setUserId","selectUserError","setSelectUserError","hasTitleError","setHasTitleError","action","method","onSubmit","event","preventDefault","preparedTitle","replace","trim","titleString","newTodo","Math","max","state","addTodo","type","value","onChange","target","placeholder","userIdNumber","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e92cc971.chunk.js","sourcesContent":["import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport './TodoInfo.scss';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n","import { Todo } from '../types/Todo';\n\nexport const getNewTodoId = (todos: Todo[]) => {\n  const lastTodoId = Math.max(...todos.map(todo => todo.id));\n\n  return lastTodoId + 1;\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { getUserById, getNewTodoId } from './helpers';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState<null | number>(null);\n  const [selectUserError, setSelectUserError] = useState(false);\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const addTodo = (titleString: string, user: number) => {\n    const newTodo = {\n      id: getNewTodoId(visibleTodos),\n      title: titleString,\n      completed: false,\n      userId: user,\n      user: getUserById(user),\n    };\n\n    setVisibleTodos(state => [...state, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const preparedTitle = title.replace(/[^а-яА-Яa-zA-Z\\d\\s]/g, '').trim();\n\n    if (!userId) {\n      setSelectUserError(true);\n    }\n\n    if (!preparedTitle) {\n      setTitle('');\n      setHasTitleError(true);\n    }\n\n    if (preparedTitle && userId) {\n      addTodo(preparedTitle, +userId);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (hasTitleError) {\n      setHasTitleError(false);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (selectUserError) {\n      setSelectUserError(false);\n    }\n\n    const userIdNumber = +event.target.value;\n\n    setUserId(userIdNumber);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        className=\"TodoForm\"\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"TodoForm__field field\">\n          <input\n            className=\"TodoForm__input TodoForm__input--title\"\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Enter a title\"\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"TodoForm__field field\">\n          <select\n            className=\"TodoForm__input TodoForm__input--user\"\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={userId || 0}\n            onChange={handleChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {selectUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          className=\"TodoForm__submit\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}