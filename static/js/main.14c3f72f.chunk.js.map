{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","TodoForm","addTodo","users","useState","setTitle","userId","setUserId","isUserSelected","setIsUserSelected","hasTitle","setHasTitle","action","method","onSubmit","event","preventDefault","preparedTitle","replace","type","value","onChange","target","placeholder","userIdNumber","disabled","getUser","usersFromServer","find","App","visibleTodos","setVisibleTodos","newTodo","Math","max","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14c3f72f.chunk.js","sourcesContent":["import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport './TodoInfo.scss';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { ChangeEvent, useState } from 'react';\nimport './TodoForm.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  addTodo: (title: string, userId: number) => void\n  users: User[],\n};\n\nexport const TodoForm: React.FC<Props> = ({ addTodo, users }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isUserSelected, setIsUserSelected] = useState(true);\n  const [hasTitle, setHasTitle] = useState(true);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setIsUserSelected(false);\n    }\n\n    if (!title) {\n      setHasTitle(false);\n    }\n\n    if (title && userId) {\n      const preparedTitle = title.replace(/[^а-яА-Яa-zA-Z\\d\\s]/g, '');\n\n      addTodo(preparedTitle, +userId);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!hasTitle) {\n      setHasTitle(true);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    if (!isUserSelected) {\n      setIsUserSelected(true);\n    }\n\n    const userIdNumber = +event.target.value;\n\n    setUserId(userIdNumber);\n  };\n\n  return (\n    <form\n      className=\"TodoForm\"\n      action=\"/api/users\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"TodoForm__field field\">\n        <input\n          className=\"TodoForm__input TodoForm__input--title\"\n          type=\"text\"\n          name=\"title\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Enter a title\"\n        />\n        {!hasTitle && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"TodoForm__field field\">\n        <select\n          className=\"TodoForm__input TodoForm__input--user\"\n          data-cy=\"userSelect\"\n          name=\"user\"\n          value={userId}\n          onChange={handleChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map(user => (\n            <option value={user.id} key={user.id}>{user.name}</option>\n          ))}\n        </select>\n\n        {!isUserSelected && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        className=\"TodoForm__submit\"\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n\n  const addTodo = (title: string, userId: number) => {\n    const lastTodoId = Math.max(...visibleTodos.map(todo => todo.id));\n    const newTodo = {\n      id: lastTodoId + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    setVisibleTodos(state => [...state, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm addTodo={addTodo} users={usersFromServer} />\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}